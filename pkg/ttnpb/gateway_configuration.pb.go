// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorawan-stack/api/gateway_configuration.proto

package ttnpb

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// LBTChannelConfig contains the listen-before-talk configuration for a channel.
type LBTChannelConfig struct {
	Frequency            uint64   `protobuf:"varint,1,opt,name=frequency,proto3" json:"frequency,omitempty"`
	ScanTimeMicroseconds uint32   `protobuf:"varint,2,opt,name=scan_time_microseconds,json=scanTimeMicroseconds,proto3" json:"scan_time_microseconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LBTChannelConfig) Reset()         { *m = LBTChannelConfig{} }
func (m *LBTChannelConfig) String() string { return proto.CompactTextString(m) }
func (*LBTChannelConfig) ProtoMessage()    {}
func (*LBTChannelConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{0}
}
func (m *LBTChannelConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBTChannelConfig.Unmarshal(m, b)
}
func (m *LBTChannelConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBTChannelConfig.Marshal(b, m, deterministic)
}
func (m *LBTChannelConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBTChannelConfig.Merge(m, src)
}
func (m *LBTChannelConfig) XXX_Size() int {
	return xxx_messageInfo_LBTChannelConfig.Size(m)
}
func (m *LBTChannelConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LBTChannelConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LBTChannelConfig proto.InternalMessageInfo

func (m *LBTChannelConfig) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *LBTChannelConfig) GetScanTimeMicroseconds() uint32 {
	if m != nil {
		return m.ScanTimeMicroseconds
	}
	return 0
}

// LBTConfig contains the configuration for listen-before-talk.
type LBTConfig struct {
	Enable               bool                `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	RssiTarget           float32             `protobuf:"fixed32,2,opt,name=rssi_target,json=rssiTarget,proto3" json:"rssi_target,omitempty"`
	ChannelConfigs       []*LBTChannelConfig `protobuf:"bytes,3,rep,name=channel_configs,json=channelConfigs,proto3" json:"channel_configs,omitempty"`
	RssiOffset           float32             `protobuf:"fixed32,4,opt,name=rssi_offset,json=rssiOffset,proto3" json:"rssi_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *LBTConfig) Reset()         { *m = LBTConfig{} }
func (m *LBTConfig) String() string { return proto.CompactTextString(m) }
func (*LBTConfig) ProtoMessage()    {}
func (*LBTConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{1}
}
func (m *LBTConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LBTConfig.Unmarshal(m, b)
}
func (m *LBTConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LBTConfig.Marshal(b, m, deterministic)
}
func (m *LBTConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LBTConfig.Merge(m, src)
}
func (m *LBTConfig) XXX_Size() int {
	return xxx_messageInfo_LBTConfig.Size(m)
}
func (m *LBTConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LBTConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LBTConfig proto.InternalMessageInfo

func (m *LBTConfig) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *LBTConfig) GetRssiTarget() float32 {
	if m != nil {
		return m.RssiTarget
	}
	return 0
}

func (m *LBTConfig) GetChannelConfigs() []*LBTChannelConfig {
	if m != nil {
		return m.ChannelConfigs
	}
	return nil
}

func (m *LBTConfig) GetRssiOffset() float32 {
	if m != nil {
		return m.RssiOffset
	}
	return 0
}

// RFConfig contains the configuration for one of the radios.
type RFConfig struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Frequency            uint64   `protobuf:"varint,3,opt,name=frequency,proto3" json:"frequency,omitempty"`
	RssiOffset           float32  `protobuf:"fixed32,4,opt,name=rssi_offset,json=rssiOffset,proto3" json:"rssi_offset,omitempty"`
	TxEnable             bool     `protobuf:"varint,5,opt,name=tx_enable,json=txEnable,proto3" json:"tx_enable,omitempty"`
	TxFreqMin            uint64   `protobuf:"varint,6,opt,name=tx_freq_min,json=txFreqMin,proto3" json:"tx_freq_min,omitempty"`
	TxFreqMax            uint64   `protobuf:"varint,7,opt,name=tx_freq_max,json=txFreqMax,proto3" json:"tx_freq_max,omitempty"`
	TxNotchFreq          uint64   `protobuf:"varint,8,opt,name=tx_notch_freq,json=txNotchFreq,proto3" json:"tx_notch_freq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFConfig) Reset()         { *m = RFConfig{} }
func (m *RFConfig) String() string { return proto.CompactTextString(m) }
func (*RFConfig) ProtoMessage()    {}
func (*RFConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{2}
}
func (m *RFConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFConfig.Unmarshal(m, b)
}
func (m *RFConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFConfig.Marshal(b, m, deterministic)
}
func (m *RFConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFConfig.Merge(m, src)
}
func (m *RFConfig) XXX_Size() int {
	return xxx_messageInfo_RFConfig.Size(m)
}
func (m *RFConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RFConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RFConfig proto.InternalMessageInfo

func (m *RFConfig) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *RFConfig) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *RFConfig) GetFrequency() uint64 {
	if m != nil {
		return m.Frequency
	}
	return 0
}

func (m *RFConfig) GetRssiOffset() float32 {
	if m != nil {
		return m.RssiOffset
	}
	return 0
}

func (m *RFConfig) GetTxEnable() bool {
	if m != nil {
		return m.TxEnable
	}
	return false
}

func (m *RFConfig) GetTxFreqMin() uint64 {
	if m != nil {
		return m.TxFreqMin
	}
	return 0
}

func (m *RFConfig) GetTxFreqMax() uint64 {
	if m != nil {
		return m.TxFreqMax
	}
	return 0
}

func (m *RFConfig) GetTxNotchFreq() uint64 {
	if m != nil {
		return m.TxNotchFreq
	}
	return 0
}

// IFConfig contains the configuration for one of the channels.
type IFConfig struct {
	Enable               bool     `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Radio                uint32   `protobuf:"varint,2,opt,name=radio,proto3" json:"radio,omitempty"`
	IfValue              int32    `protobuf:"varint,3,opt,name=if_value,json=ifValue,proto3" json:"if_value,omitempty"`
	Bandwidth            uint32   `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	SpreadFactor         uint32   `protobuf:"varint,5,opt,name=spread_factor,json=spreadFactor,proto3" json:"spread_factor,omitempty"`
	Datarate             uint32   `protobuf:"varint,6,opt,name=datarate,proto3" json:"datarate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IFConfig) Reset()         { *m = IFConfig{} }
func (m *IFConfig) String() string { return proto.CompactTextString(m) }
func (*IFConfig) ProtoMessage()    {}
func (*IFConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{3}
}
func (m *IFConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IFConfig.Unmarshal(m, b)
}
func (m *IFConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IFConfig.Marshal(b, m, deterministic)
}
func (m *IFConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IFConfig.Merge(m, src)
}
func (m *IFConfig) XXX_Size() int {
	return xxx_messageInfo_IFConfig.Size(m)
}
func (m *IFConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_IFConfig.DiscardUnknown(m)
}

var xxx_messageInfo_IFConfig proto.InternalMessageInfo

func (m *IFConfig) GetEnable() bool {
	if m != nil {
		return m.Enable
	}
	return false
}

func (m *IFConfig) GetRadio() uint32 {
	if m != nil {
		return m.Radio
	}
	return 0
}

func (m *IFConfig) GetIfValue() int32 {
	if m != nil {
		return m.IfValue
	}
	return 0
}

func (m *IFConfig) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *IFConfig) GetSpreadFactor() uint32 {
	if m != nil {
		return m.SpreadFactor
	}
	return 0
}

func (m *IFConfig) GetDatarate() uint32 {
	if m != nil {
		return m.Datarate
	}
	return 0
}

// TxLUTConfig contains the configuration for the TX LUT ind
type TxLUTConfig struct {
	PaGain               int32    `protobuf:"varint,1,opt,name=pa_gain,json=paGain,proto3" json:"pa_gain,omitempty"`
	MixGain              int32    `protobuf:"varint,2,opt,name=mix_gain,json=mixGain,proto3" json:"mix_gain,omitempty"`
	RfPower              int32    `protobuf:"varint,3,opt,name=rf_power,json=rfPower,proto3" json:"rf_power,omitempty"`
	DigGain              int32    `protobuf:"varint,4,opt,name=dig_gain,json=digGain,proto3" json:"dig_gain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxLUTConfig) Reset()         { *m = TxLUTConfig{} }
func (m *TxLUTConfig) String() string { return proto.CompactTextString(m) }
func (*TxLUTConfig) ProtoMessage()    {}
func (*TxLUTConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{4}
}
func (m *TxLUTConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxLUTConfig.Unmarshal(m, b)
}
func (m *TxLUTConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxLUTConfig.Marshal(b, m, deterministic)
}
func (m *TxLUTConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxLUTConfig.Merge(m, src)
}
func (m *TxLUTConfig) XXX_Size() int {
	return xxx_messageInfo_TxLUTConfig.Size(m)
}
func (m *TxLUTConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_TxLUTConfig.DiscardUnknown(m)
}

var xxx_messageInfo_TxLUTConfig proto.InternalMessageInfo

func (m *TxLUTConfig) GetPaGain() int32 {
	if m != nil {
		return m.PaGain
	}
	return 0
}

func (m *TxLUTConfig) GetMixGain() int32 {
	if m != nil {
		return m.MixGain
	}
	return 0
}

func (m *TxLUTConfig) GetRfPower() int32 {
	if m != nil {
		return m.RfPower
	}
	return 0
}

func (m *TxLUTConfig) GetDigGain() int32 {
	if m != nil {
		return m.DigGain
	}
	return 0
}

// SX1301Config contains the configuration for the SX1301 concentrator.
type SX1301Config struct {
	LorawanPublic        bool           `protobuf:"varint,1,opt,name=lorawan_public,json=lorawanPublic,proto3" json:"lorawan_public,omitempty"`
	ClockSource          uint32         `protobuf:"varint,2,opt,name=clock_source,json=clockSource,proto3" json:"clock_source,omitempty"`
	AntennaGain          float32        `protobuf:"fixed32,3,opt,name=antenna_gain,json=antennaGain,proto3" json:"antenna_gain,omitempty"`
	LbtConfig            *LBTConfig     `protobuf:"bytes,4,opt,name=lbt_config,json=lbtConfig,proto3" json:"lbt_config,omitempty"`
	Radios               []*RFConfig    `protobuf:"bytes,5,rep,name=radios,proto3" json:"radios,omitempty"`
	Channels             []*IFConfig    `protobuf:"bytes,6,rep,name=channels,proto3" json:"channels,omitempty"`
	LoraStandardChannel  *IFConfig      `protobuf:"bytes,7,opt,name=lora_standard_channel,json=loraStandardChannel,proto3" json:"lora_standard_channel,omitempty"`
	FskChannel           *IFConfig      `protobuf:"bytes,8,opt,name=fsk_channel,json=fskChannel,proto3" json:"fsk_channel,omitempty"`
	TxLutConfigs         []*TxLUTConfig `protobuf:"bytes,9,rep,name=tx_lut_configs,json=txLutConfigs,proto3" json:"tx_lut_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SX1301Config) Reset()         { *m = SX1301Config{} }
func (m *SX1301Config) String() string { return proto.CompactTextString(m) }
func (*SX1301Config) ProtoMessage()    {}
func (*SX1301Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{5}
}
func (m *SX1301Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SX1301Config.Unmarshal(m, b)
}
func (m *SX1301Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SX1301Config.Marshal(b, m, deterministic)
}
func (m *SX1301Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SX1301Config.Merge(m, src)
}
func (m *SX1301Config) XXX_Size() int {
	return xxx_messageInfo_SX1301Config.Size(m)
}
func (m *SX1301Config) XXX_DiscardUnknown() {
	xxx_messageInfo_SX1301Config.DiscardUnknown(m)
}

var xxx_messageInfo_SX1301Config proto.InternalMessageInfo

func (m *SX1301Config) GetLorawanPublic() bool {
	if m != nil {
		return m.LorawanPublic
	}
	return false
}

func (m *SX1301Config) GetClockSource() uint32 {
	if m != nil {
		return m.ClockSource
	}
	return 0
}

func (m *SX1301Config) GetAntennaGain() float32 {
	if m != nil {
		return m.AntennaGain
	}
	return 0
}

func (m *SX1301Config) GetLbtConfig() *LBTConfig {
	if m != nil {
		return m.LbtConfig
	}
	return nil
}

func (m *SX1301Config) GetRadios() []*RFConfig {
	if m != nil {
		return m.Radios
	}
	return nil
}

func (m *SX1301Config) GetChannels() []*IFConfig {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *SX1301Config) GetLoraStandardChannel() *IFConfig {
	if m != nil {
		return m.LoraStandardChannel
	}
	return nil
}

func (m *SX1301Config) GetFskChannel() *IFConfig {
	if m != nil {
		return m.FskChannel
	}
	return nil
}

func (m *SX1301Config) GetTxLutConfigs() []*TxLUTConfig {
	if m != nil {
		return m.TxLutConfigs
	}
	return nil
}

// SemtechUDPConfig is the full configuration for Semtech's UDP Packet Forwarder.
type SemtechUDPConfig struct {
	Sx1301Config         *SX1301Config                   `protobuf:"bytes,1,opt,name=sx1301_config,json=sx1301Config,proto3" json:"sx1301_config,omitempty"`
	GatewayConfig        *SemtechUDPConfig_GatewayConfig `protobuf:"bytes,2,opt,name=gateway_config,json=gatewayConfig,proto3" json:"gateway_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SemtechUDPConfig) Reset()         { *m = SemtechUDPConfig{} }
func (m *SemtechUDPConfig) String() string { return proto.CompactTextString(m) }
func (*SemtechUDPConfig) ProtoMessage()    {}
func (*SemtechUDPConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{6}
}
func (m *SemtechUDPConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemtechUDPConfig.Unmarshal(m, b)
}
func (m *SemtechUDPConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemtechUDPConfig.Marshal(b, m, deterministic)
}
func (m *SemtechUDPConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemtechUDPConfig.Merge(m, src)
}
func (m *SemtechUDPConfig) XXX_Size() int {
	return xxx_messageInfo_SemtechUDPConfig.Size(m)
}
func (m *SemtechUDPConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SemtechUDPConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SemtechUDPConfig proto.InternalMessageInfo

func (m *SemtechUDPConfig) GetSx1301Config() *SX1301Config {
	if m != nil {
		return m.Sx1301Config
	}
	return nil
}

func (m *SemtechUDPConfig) GetGatewayConfig() *SemtechUDPConfig_GatewayConfig {
	if m != nil {
		return m.GatewayConfig
	}
	return nil
}

// GatewayConf contains the configuration for the gateway's server connection.
type SemtechUDPConfig_GatewayConfig struct {
	GatewayId            *GatewayIdentifiers               `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	ServerAddress        string                            `protobuf:"bytes,2,opt,name=server_address,json=serverAddress,proto3" json:"server_address,omitempty"`
	ServerPortUp         uint32                            `protobuf:"varint,3,opt,name=server_port_up,json=serverPortUp,proto3" json:"server_port_up,omitempty"`
	ServerPortDown       uint32                            `protobuf:"varint,4,opt,name=server_port_down,json=serverPortDown,proto3" json:"server_port_down,omitempty"`
	Enabled              bool                              `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Servers              []*SemtechUDPConfig_GatewayConfig `protobuf:"bytes,6,rep,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *SemtechUDPConfig_GatewayConfig) Reset()         { *m = SemtechUDPConfig_GatewayConfig{} }
func (m *SemtechUDPConfig_GatewayConfig) String() string { return proto.CompactTextString(m) }
func (*SemtechUDPConfig_GatewayConfig) ProtoMessage()    {}
func (*SemtechUDPConfig_GatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{6, 0}
}
func (m *SemtechUDPConfig_GatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SemtechUDPConfig_GatewayConfig.Unmarshal(m, b)
}
func (m *SemtechUDPConfig_GatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SemtechUDPConfig_GatewayConfig.Marshal(b, m, deterministic)
}
func (m *SemtechUDPConfig_GatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SemtechUDPConfig_GatewayConfig.Merge(m, src)
}
func (m *SemtechUDPConfig_GatewayConfig) XXX_Size() int {
	return xxx_messageInfo_SemtechUDPConfig_GatewayConfig.Size(m)
}
func (m *SemtechUDPConfig_GatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SemtechUDPConfig_GatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SemtechUDPConfig_GatewayConfig proto.InternalMessageInfo

func (m *SemtechUDPConfig_GatewayConfig) GetGatewayId() *GatewayIdentifiers {
	if m != nil {
		return m.GatewayId
	}
	return nil
}

func (m *SemtechUDPConfig_GatewayConfig) GetServerAddress() string {
	if m != nil {
		return m.ServerAddress
	}
	return ""
}

func (m *SemtechUDPConfig_GatewayConfig) GetServerPortUp() uint32 {
	if m != nil {
		return m.ServerPortUp
	}
	return 0
}

func (m *SemtechUDPConfig_GatewayConfig) GetServerPortDown() uint32 {
	if m != nil {
		return m.ServerPortDown
	}
	return 0
}

func (m *SemtechUDPConfig_GatewayConfig) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *SemtechUDPConfig_GatewayConfig) GetServers() []*SemtechUDPConfig_GatewayConfig {
	if m != nil {
		return m.Servers
	}
	return nil
}

// LoradConfig represents the Lorad configuration of Semtech's UDP Packet Forwarder.
type LoradConfig struct {
	Sx1301Config         *LoradConfig_LoradSX1301Config `protobuf:"bytes,1,opt,name=sx1301_config,json=sx1301Config,proto3" json:"sx1301_config,omitempty"`
	GatewayConfig        *LoradConfig_GatewayConfig     `protobuf:"bytes,2,opt,name=gateway_config,json=gatewayConfig,proto3" json:"gateway_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *LoradConfig) Reset()         { *m = LoradConfig{} }
func (m *LoradConfig) String() string { return proto.CompactTextString(m) }
func (*LoradConfig) ProtoMessage()    {}
func (*LoradConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{7}
}
func (m *LoradConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoradConfig.Unmarshal(m, b)
}
func (m *LoradConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoradConfig.Marshal(b, m, deterministic)
}
func (m *LoradConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoradConfig.Merge(m, src)
}
func (m *LoradConfig) XXX_Size() int {
	return xxx_messageInfo_LoradConfig.Size(m)
}
func (m *LoradConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoradConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoradConfig proto.InternalMessageInfo

func (m *LoradConfig) GetSx1301Config() *LoradConfig_LoradSX1301Config {
	if m != nil {
		return m.Sx1301Config
	}
	return nil
}

func (m *LoradConfig) GetGatewayConfig() *LoradConfig_GatewayConfig {
	if m != nil {
		return m.GatewayConfig
	}
	return nil
}

type LoradConfig_LoradSX1301Config struct {
	GlobalConfig         *SX1301Config `protobuf:"bytes,1,opt,name=global_config,json=globalConfig,proto3" json:"global_config,omitempty"`
	InsertionLoss        float32       `protobuf:"fixed32,2,opt,name=insertion_loss,json=insertionLoss,proto3" json:"insertion_loss,omitempty"`
	InsertionLossDesc    string        `protobuf:"bytes,3,opt,name=insertion_loss_desc,json=insertionLossDesc,proto3" json:"insertion_loss_desc,omitempty"`
	AntennaGainDesc      string        `protobuf:"bytes,4,opt,name=antenna_gain_desc,json=antennaGainDesc,proto3" json:"antenna_gain_desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LoradConfig_LoradSX1301Config) Reset()         { *m = LoradConfig_LoradSX1301Config{} }
func (m *LoradConfig_LoradSX1301Config) String() string { return proto.CompactTextString(m) }
func (*LoradConfig_LoradSX1301Config) ProtoMessage()    {}
func (*LoradConfig_LoradSX1301Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{7, 0}
}
func (m *LoradConfig_LoradSX1301Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoradConfig_LoradSX1301Config.Unmarshal(m, b)
}
func (m *LoradConfig_LoradSX1301Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoradConfig_LoradSX1301Config.Marshal(b, m, deterministic)
}
func (m *LoradConfig_LoradSX1301Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoradConfig_LoradSX1301Config.Merge(m, src)
}
func (m *LoradConfig_LoradSX1301Config) XXX_Size() int {
	return xxx_messageInfo_LoradConfig_LoradSX1301Config.Size(m)
}
func (m *LoradConfig_LoradSX1301Config) XXX_DiscardUnknown() {
	xxx_messageInfo_LoradConfig_LoradSX1301Config.DiscardUnknown(m)
}

var xxx_messageInfo_LoradConfig_LoradSX1301Config proto.InternalMessageInfo

func (m *LoradConfig_LoradSX1301Config) GetGlobalConfig() *SX1301Config {
	if m != nil {
		return m.GlobalConfig
	}
	return nil
}

func (m *LoradConfig_LoradSX1301Config) GetInsertionLoss() float32 {
	if m != nil {
		return m.InsertionLoss
	}
	return 0
}

func (m *LoradConfig_LoradSX1301Config) GetInsertionLossDesc() string {
	if m != nil {
		return m.InsertionLossDesc
	}
	return ""
}

func (m *LoradConfig_LoradSX1301Config) GetAntennaGainDesc() string {
	if m != nil {
		return m.AntennaGainDesc
	}
	return ""
}

type LoradConfig_GatewayConfig struct {
	BeaconEnable         bool     `protobuf:"varint,1,opt,name=beacon_enable,json=beaconEnable,proto3" json:"beacon_enable,omitempty"`
	BeaconPeriod         uint32   `protobuf:"varint,2,opt,name=beacon_period,json=beaconPeriod,proto3" json:"beacon_period,omitempty"`
	BeaconFreqHz         uint32   `protobuf:"varint,3,opt,name=beacon_freq_hz,json=beaconFreqHz,proto3" json:"beacon_freq_hz,omitempty"`
	BeaconFreqNb         uint32   `protobuf:"varint,4,opt,name=beacon_freq_nb,json=beaconFreqNb,proto3" json:"beacon_freq_nb,omitempty"`
	BeaconStep           uint32   `protobuf:"varint,5,opt,name=beacon_step,json=beaconStep,proto3" json:"beacon_step,omitempty"`
	BeaconDatarate       uint32   `protobuf:"varint,6,opt,name=beacon_datarate,json=beaconDatarate,proto3" json:"beacon_datarate,omitempty"`
	BeaconBwHz           uint32   `protobuf:"varint,7,opt,name=beacon_bw_hz,json=beaconBwHz,proto3" json:"beacon_bw_hz,omitempty"`
	BeaconPower          uint32   `protobuf:"varint,8,opt,name=beacon_power,json=beaconPower,proto3" json:"beacon_power,omitempty"`
	BeaconInfodesc       []byte   `protobuf:"bytes,9,opt,name=beacon_infodesc,json=beaconInfodesc,proto3" json:"beacon_infodesc,omitempty"`
	BeaconLatitude       float64  `protobuf:"fixed64,10,opt,name=beacon_latitude,json=beaconLatitude,proto3" json:"beacon_latitude,omitempty"`
	BeaconLongitude      float64  `protobuf:"fixed64,11,opt,name=beacon_longitude,json=beaconLongitude,proto3" json:"beacon_longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoradConfig_GatewayConfig) Reset()         { *m = LoradConfig_GatewayConfig{} }
func (m *LoradConfig_GatewayConfig) String() string { return proto.CompactTextString(m) }
func (*LoradConfig_GatewayConfig) ProtoMessage()    {}
func (*LoradConfig_GatewayConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{7, 1}
}
func (m *LoradConfig_GatewayConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoradConfig_GatewayConfig.Unmarshal(m, b)
}
func (m *LoradConfig_GatewayConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoradConfig_GatewayConfig.Marshal(b, m, deterministic)
}
func (m *LoradConfig_GatewayConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoradConfig_GatewayConfig.Merge(m, src)
}
func (m *LoradConfig_GatewayConfig) XXX_Size() int {
	return xxx_messageInfo_LoradConfig_GatewayConfig.Size(m)
}
func (m *LoradConfig_GatewayConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoradConfig_GatewayConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoradConfig_GatewayConfig proto.InternalMessageInfo

func (m *LoradConfig_GatewayConfig) GetBeaconEnable() bool {
	if m != nil {
		return m.BeaconEnable
	}
	return false
}

func (m *LoradConfig_GatewayConfig) GetBeaconPeriod() uint32 {
	if m != nil {
		return m.BeaconPeriod
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconFreqHz() uint32 {
	if m != nil {
		return m.BeaconFreqHz
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconFreqNb() uint32 {
	if m != nil {
		return m.BeaconFreqNb
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconStep() uint32 {
	if m != nil {
		return m.BeaconStep
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconDatarate() uint32 {
	if m != nil {
		return m.BeaconDatarate
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconBwHz() uint32 {
	if m != nil {
		return m.BeaconBwHz
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconPower() uint32 {
	if m != nil {
		return m.BeaconPower
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconInfodesc() []byte {
	if m != nil {
		return m.BeaconInfodesc
	}
	return nil
}

func (m *LoradConfig_GatewayConfig) GetBeaconLatitude() float64 {
	if m != nil {
		return m.BeaconLatitude
	}
	return 0
}

func (m *LoradConfig_GatewayConfig) GetBeaconLongitude() float64 {
	if m != nil {
		return m.BeaconLongitude
	}
	return 0
}

// LorafwdConfig represents the Lorafwd configuration of Semtech's UDP Packet Forwarder.
type LoraFwdConfig struct {
	Gateway              *GatewayIdentifiers       `protobuf:"bytes,1,opt,name=gateway,proto3" json:"gateway,omitempty"`
	Filter               *LoraFwdConfig_Filter     `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	Database             *LoraFwdConfig_Database   `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	Gwmp                 *LoraFwdConfig_GWMPConfig `protobuf:"bytes,4,opt,name=gwmp,proto3" json:"gwmp,omitempty"`
	Api                  *LoraFwdConfig_API        `protobuf:"bytes,5,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *LoraFwdConfig) Reset()         { *m = LoraFwdConfig{} }
func (m *LoraFwdConfig) String() string { return proto.CompactTextString(m) }
func (*LoraFwdConfig) ProtoMessage()    {}
func (*LoraFwdConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{8}
}
func (m *LoraFwdConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoraFwdConfig.Unmarshal(m, b)
}
func (m *LoraFwdConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoraFwdConfig.Marshal(b, m, deterministic)
}
func (m *LoraFwdConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoraFwdConfig.Merge(m, src)
}
func (m *LoraFwdConfig) XXX_Size() int {
	return xxx_messageInfo_LoraFwdConfig.Size(m)
}
func (m *LoraFwdConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoraFwdConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoraFwdConfig proto.InternalMessageInfo

func (m *LoraFwdConfig) GetGateway() *GatewayIdentifiers {
	if m != nil {
		return m.Gateway
	}
	return nil
}

func (m *LoraFwdConfig) GetFilter() *LoraFwdConfig_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *LoraFwdConfig) GetDatabase() *LoraFwdConfig_Database {
	if m != nil {
		return m.Database
	}
	return nil
}

func (m *LoraFwdConfig) GetGwmp() *LoraFwdConfig_GWMPConfig {
	if m != nil {
		return m.Gwmp
	}
	return nil
}

func (m *LoraFwdConfig) GetApi() *LoraFwdConfig_API {
	if m != nil {
		return m.Api
	}
	return nil
}

type LoraFwdConfig_Filter struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoraFwdConfig_Filter) Reset()         { *m = LoraFwdConfig_Filter{} }
func (m *LoraFwdConfig_Filter) String() string { return proto.CompactTextString(m) }
func (*LoraFwdConfig_Filter) ProtoMessage()    {}
func (*LoraFwdConfig_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{8, 0}
}
func (m *LoraFwdConfig_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoraFwdConfig_Filter.Unmarshal(m, b)
}
func (m *LoraFwdConfig_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoraFwdConfig_Filter.Marshal(b, m, deterministic)
}
func (m *LoraFwdConfig_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoraFwdConfig_Filter.Merge(m, src)
}
func (m *LoraFwdConfig_Filter) XXX_Size() int {
	return xxx_messageInfo_LoraFwdConfig_Filter.Size(m)
}
func (m *LoraFwdConfig_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_LoraFwdConfig_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_LoraFwdConfig_Filter proto.InternalMessageInfo

type LoraFwdConfig_Database struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoraFwdConfig_Database) Reset()         { *m = LoraFwdConfig_Database{} }
func (m *LoraFwdConfig_Database) String() string { return proto.CompactTextString(m) }
func (*LoraFwdConfig_Database) ProtoMessage()    {}
func (*LoraFwdConfig_Database) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{8, 1}
}
func (m *LoraFwdConfig_Database) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoraFwdConfig_Database.Unmarshal(m, b)
}
func (m *LoraFwdConfig_Database) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoraFwdConfig_Database.Marshal(b, m, deterministic)
}
func (m *LoraFwdConfig_Database) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoraFwdConfig_Database.Merge(m, src)
}
func (m *LoraFwdConfig_Database) XXX_Size() int {
	return xxx_messageInfo_LoraFwdConfig_Database.Size(m)
}
func (m *LoraFwdConfig_Database) XXX_DiscardUnknown() {
	xxx_messageInfo_LoraFwdConfig_Database.DiscardUnknown(m)
}

var xxx_messageInfo_LoraFwdConfig_Database proto.InternalMessageInfo

type LoraFwdConfig_GWMPConfig struct {
	Node                 string   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	ServiceUplink        uint32   `protobuf:"varint,2,opt,name=service_uplink,json=serviceUplink,proto3" json:"service_uplink,omitempty"`
	ServiceDownlink      uint32   `protobuf:"varint,3,opt,name=service_downlink,json=serviceDownlink,proto3" json:"service_downlink,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoraFwdConfig_GWMPConfig) Reset()         { *m = LoraFwdConfig_GWMPConfig{} }
func (m *LoraFwdConfig_GWMPConfig) String() string { return proto.CompactTextString(m) }
func (*LoraFwdConfig_GWMPConfig) ProtoMessage()    {}
func (*LoraFwdConfig_GWMPConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{8, 2}
}
func (m *LoraFwdConfig_GWMPConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoraFwdConfig_GWMPConfig.Unmarshal(m, b)
}
func (m *LoraFwdConfig_GWMPConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoraFwdConfig_GWMPConfig.Marshal(b, m, deterministic)
}
func (m *LoraFwdConfig_GWMPConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoraFwdConfig_GWMPConfig.Merge(m, src)
}
func (m *LoraFwdConfig_GWMPConfig) XXX_Size() int {
	return xxx_messageInfo_LoraFwdConfig_GWMPConfig.Size(m)
}
func (m *LoraFwdConfig_GWMPConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LoraFwdConfig_GWMPConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LoraFwdConfig_GWMPConfig proto.InternalMessageInfo

func (m *LoraFwdConfig_GWMPConfig) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *LoraFwdConfig_GWMPConfig) GetServiceUplink() uint32 {
	if m != nil {
		return m.ServiceUplink
	}
	return 0
}

func (m *LoraFwdConfig_GWMPConfig) GetServiceDownlink() uint32 {
	if m != nil {
		return m.ServiceDownlink
	}
	return 0
}

type LoraFwdConfig_API struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoraFwdConfig_API) Reset()         { *m = LoraFwdConfig_API{} }
func (m *LoraFwdConfig_API) String() string { return proto.CompactTextString(m) }
func (*LoraFwdConfig_API) ProtoMessage()    {}
func (*LoraFwdConfig_API) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{8, 3}
}
func (m *LoraFwdConfig_API) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoraFwdConfig_API.Unmarshal(m, b)
}
func (m *LoraFwdConfig_API) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoraFwdConfig_API.Marshal(b, m, deterministic)
}
func (m *LoraFwdConfig_API) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoraFwdConfig_API.Merge(m, src)
}
func (m *LoraFwdConfig_API) XXX_Size() int {
	return xxx_messageInfo_LoraFwdConfig_API.Size(m)
}
func (m *LoraFwdConfig_API) XXX_DiscardUnknown() {
	xxx_messageInfo_LoraFwdConfig_API.DiscardUnknown(m)
}

var xxx_messageInfo_LoraFwdConfig_API proto.InternalMessageInfo

// GatewayInfoResponse represents the response of the v2 route of the gateway
// configuration server
type GatewayInfoResponse struct {
	Id                   string                               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Attributes           *GatewayInfoResponse_Attributes      `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	FrequencyPlan        string                               `protobuf:"bytes,3,opt,name=frequency_plan,json=frequencyPlan,proto3" json:"frequency_plan,omitempty"`
	FrequencyPlanUrl     string                               `protobuf:"bytes,4,opt,name=frequency_plan_url,json=frequencyPlanUrl,proto3" json:"frequency_plan_url,omitempty"`
	AutoUpdate           bool                                 `protobuf:"varint,5,opt,name=auto_update,json=autoUpdate,proto3" json:"auto_update,omitempty"`
	FirmwareUrl          string                               `protobuf:"bytes,6,opt,name=firmware_url,json=firmwareUrl,proto3" json:"firmware_url,omitempty"`
	AntennaLocation      *GatewayInfoResponse_AntennaLocation `protobuf:"bytes,7,opt,name=antenna_location,json=antennaLocation,proto3" json:"antenna_location,omitempty"`
	Oauth2Token          *GatewayInfoResponse_OAuth2Token     `protobuf:"bytes,8,opt,name=oauth2_token,json=oauth2Token,proto3" json:"oauth2_token,omitempty"`
	Router               *GatewayInfoResponse_Router          `protobuf:"bytes,9,opt,name=router,proto3" json:"router,omitempty"`
	FallbackRouters      []*GatewayInfoResponse_Router        `protobuf:"bytes,10,rep,name=fallback_routers,json=fallbackRouters,proto3" json:"fallback_routers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *GatewayInfoResponse) Reset()         { *m = GatewayInfoResponse{} }
func (m *GatewayInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GatewayInfoResponse) ProtoMessage()    {}
func (*GatewayInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{9}
}
func (m *GatewayInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfoResponse.Unmarshal(m, b)
}
func (m *GatewayInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfoResponse.Marshal(b, m, deterministic)
}
func (m *GatewayInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfoResponse.Merge(m, src)
}
func (m *GatewayInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GatewayInfoResponse.Size(m)
}
func (m *GatewayInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfoResponse proto.InternalMessageInfo

func (m *GatewayInfoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayInfoResponse) GetAttributes() *GatewayInfoResponse_Attributes {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *GatewayInfoResponse) GetFrequencyPlan() string {
	if m != nil {
		return m.FrequencyPlan
	}
	return ""
}

func (m *GatewayInfoResponse) GetFrequencyPlanUrl() string {
	if m != nil {
		return m.FrequencyPlanUrl
	}
	return ""
}

func (m *GatewayInfoResponse) GetAutoUpdate() bool {
	if m != nil {
		return m.AutoUpdate
	}
	return false
}

func (m *GatewayInfoResponse) GetFirmwareUrl() string {
	if m != nil {
		return m.FirmwareUrl
	}
	return ""
}

func (m *GatewayInfoResponse) GetAntennaLocation() *GatewayInfoResponse_AntennaLocation {
	if m != nil {
		return m.AntennaLocation
	}
	return nil
}

func (m *GatewayInfoResponse) GetOauth2Token() *GatewayInfoResponse_OAuth2Token {
	if m != nil {
		return m.Oauth2Token
	}
	return nil
}

func (m *GatewayInfoResponse) GetRouter() *GatewayInfoResponse_Router {
	if m != nil {
		return m.Router
	}
	return nil
}

func (m *GatewayInfoResponse) GetFallbackRouters() []*GatewayInfoResponse_Router {
	if m != nil {
		return m.FallbackRouters
	}
	return nil
}

type GatewayInfoResponse_Attributes struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayInfoResponse_Attributes) Reset()         { *m = GatewayInfoResponse_Attributes{} }
func (m *GatewayInfoResponse_Attributes) String() string { return proto.CompactTextString(m) }
func (*GatewayInfoResponse_Attributes) ProtoMessage()    {}
func (*GatewayInfoResponse_Attributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{9, 0}
}
func (m *GatewayInfoResponse_Attributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfoResponse_Attributes.Unmarshal(m, b)
}
func (m *GatewayInfoResponse_Attributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfoResponse_Attributes.Marshal(b, m, deterministic)
}
func (m *GatewayInfoResponse_Attributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfoResponse_Attributes.Merge(m, src)
}
func (m *GatewayInfoResponse_Attributes) XXX_Size() int {
	return xxx_messageInfo_GatewayInfoResponse_Attributes.Size(m)
}
func (m *GatewayInfoResponse_Attributes) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfoResponse_Attributes.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfoResponse_Attributes proto.InternalMessageInfo

func (m *GatewayInfoResponse_Attributes) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type GatewayInfoResponse_AntennaLocation struct {
	Latitude             float64  `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude             int32    `protobuf:"varint,3,opt,name=Altitude,proto3" json:"Altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayInfoResponse_AntennaLocation) Reset()         { *m = GatewayInfoResponse_AntennaLocation{} }
func (m *GatewayInfoResponse_AntennaLocation) String() string { return proto.CompactTextString(m) }
func (*GatewayInfoResponse_AntennaLocation) ProtoMessage()    {}
func (*GatewayInfoResponse_AntennaLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{9, 1}
}
func (m *GatewayInfoResponse_AntennaLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfoResponse_AntennaLocation.Unmarshal(m, b)
}
func (m *GatewayInfoResponse_AntennaLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfoResponse_AntennaLocation.Marshal(b, m, deterministic)
}
func (m *GatewayInfoResponse_AntennaLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfoResponse_AntennaLocation.Merge(m, src)
}
func (m *GatewayInfoResponse_AntennaLocation) XXX_Size() int {
	return xxx_messageInfo_GatewayInfoResponse_AntennaLocation.Size(m)
}
func (m *GatewayInfoResponse_AntennaLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfoResponse_AntennaLocation.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfoResponse_AntennaLocation proto.InternalMessageInfo

func (m *GatewayInfoResponse_AntennaLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GatewayInfoResponse_AntennaLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GatewayInfoResponse_AntennaLocation) GetAltitude() int32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type GatewayInfoResponse_OAuth2Token struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	ExpiresIn            uint32   `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayInfoResponse_OAuth2Token) Reset()         { *m = GatewayInfoResponse_OAuth2Token{} }
func (m *GatewayInfoResponse_OAuth2Token) String() string { return proto.CompactTextString(m) }
func (*GatewayInfoResponse_OAuth2Token) ProtoMessage()    {}
func (*GatewayInfoResponse_OAuth2Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{9, 2}
}
func (m *GatewayInfoResponse_OAuth2Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfoResponse_OAuth2Token.Unmarshal(m, b)
}
func (m *GatewayInfoResponse_OAuth2Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfoResponse_OAuth2Token.Marshal(b, m, deterministic)
}
func (m *GatewayInfoResponse_OAuth2Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfoResponse_OAuth2Token.Merge(m, src)
}
func (m *GatewayInfoResponse_OAuth2Token) XXX_Size() int {
	return xxx_messageInfo_GatewayInfoResponse_OAuth2Token.Size(m)
}
func (m *GatewayInfoResponse_OAuth2Token) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfoResponse_OAuth2Token.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfoResponse_OAuth2Token proto.InternalMessageInfo

func (m *GatewayInfoResponse_OAuth2Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *GatewayInfoResponse_OAuth2Token) GetExpiresIn() uint32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

type GatewayInfoResponse_Router struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MqttAddress          string   `protobuf:"bytes,2,opt,name=mqtt_address,json=mqttAddress,proto3" json:"mqtt_address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayInfoResponse_Router) Reset()         { *m = GatewayInfoResponse_Router{} }
func (m *GatewayInfoResponse_Router) String() string { return proto.CompactTextString(m) }
func (*GatewayInfoResponse_Router) ProtoMessage()    {}
func (*GatewayInfoResponse_Router) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{9, 3}
}
func (m *GatewayInfoResponse_Router) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfoResponse_Router.Unmarshal(m, b)
}
func (m *GatewayInfoResponse_Router) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfoResponse_Router.Marshal(b, m, deterministic)
}
func (m *GatewayInfoResponse_Router) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfoResponse_Router.Merge(m, src)
}
func (m *GatewayInfoResponse_Router) XXX_Size() int {
	return xxx_messageInfo_GatewayInfoResponse_Router.Size(m)
}
func (m *GatewayInfoResponse_Router) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfoResponse_Router.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfoResponse_Router proto.InternalMessageInfo

func (m *GatewayInfoResponse_Router) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GatewayInfoResponse_Router) GetMqttAddress() string {
	if m != nil {
		return m.MqttAddress
	}
	return ""
}

// request information necessary for the v2 route that returns the frequency
// plans configuraiton
type PullFrequencyPlanConfigRequest struct {
	FrequencyPlanId      string   `protobuf:"bytes,1,opt,name=frequency_plan_id,json=frequencyPlanId,proto3" json:"frequency_plan_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullFrequencyPlanConfigRequest) Reset()         { *m = PullFrequencyPlanConfigRequest{} }
func (m *PullFrequencyPlanConfigRequest) String() string { return proto.CompactTextString(m) }
func (*PullFrequencyPlanConfigRequest) ProtoMessage()    {}
func (*PullFrequencyPlanConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b59222464c10014, []int{10}
}
func (m *PullFrequencyPlanConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullFrequencyPlanConfigRequest.Unmarshal(m, b)
}
func (m *PullFrequencyPlanConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullFrequencyPlanConfigRequest.Marshal(b, m, deterministic)
}
func (m *PullFrequencyPlanConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullFrequencyPlanConfigRequest.Merge(m, src)
}
func (m *PullFrequencyPlanConfigRequest) XXX_Size() int {
	return xxx_messageInfo_PullFrequencyPlanConfigRequest.Size(m)
}
func (m *PullFrequencyPlanConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullFrequencyPlanConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullFrequencyPlanConfigRequest proto.InternalMessageInfo

func (m *PullFrequencyPlanConfigRequest) GetFrequencyPlanId() string {
	if m != nil {
		return m.FrequencyPlanId
	}
	return ""
}

func init() {
	proto.RegisterType((*LBTChannelConfig)(nil), "ttn.lorawan.v3.LBTChannelConfig")
	proto.RegisterType((*LBTConfig)(nil), "ttn.lorawan.v3.LBTConfig")
	proto.RegisterType((*RFConfig)(nil), "ttn.lorawan.v3.RFConfig")
	proto.RegisterType((*IFConfig)(nil), "ttn.lorawan.v3.IFConfig")
	proto.RegisterType((*TxLUTConfig)(nil), "ttn.lorawan.v3.TxLUTConfig")
	proto.RegisterType((*SX1301Config)(nil), "ttn.lorawan.v3.SX1301Config")
	proto.RegisterType((*SemtechUDPConfig)(nil), "ttn.lorawan.v3.SemtechUDPConfig")
	proto.RegisterType((*SemtechUDPConfig_GatewayConfig)(nil), "ttn.lorawan.v3.SemtechUDPConfig.GatewayConfig")
	proto.RegisterType((*LoradConfig)(nil), "ttn.lorawan.v3.LoradConfig")
	proto.RegisterType((*LoradConfig_LoradSX1301Config)(nil), "ttn.lorawan.v3.LoradConfig.LoradSX1301Config")
	proto.RegisterType((*LoradConfig_GatewayConfig)(nil), "ttn.lorawan.v3.LoradConfig.GatewayConfig")
	proto.RegisterType((*LoraFwdConfig)(nil), "ttn.lorawan.v3.LoraFwdConfig")
	proto.RegisterType((*LoraFwdConfig_Filter)(nil), "ttn.lorawan.v3.LoraFwdConfig.Filter")
	proto.RegisterType((*LoraFwdConfig_Database)(nil), "ttn.lorawan.v3.LoraFwdConfig.Database")
	proto.RegisterType((*LoraFwdConfig_GWMPConfig)(nil), "ttn.lorawan.v3.LoraFwdConfig.GWMPConfig")
	proto.RegisterType((*LoraFwdConfig_API)(nil), "ttn.lorawan.v3.LoraFwdConfig.API")
	proto.RegisterType((*GatewayInfoResponse)(nil), "ttn.lorawan.v3.GatewayInfoResponse")
	proto.RegisterType((*GatewayInfoResponse_Attributes)(nil), "ttn.lorawan.v3.GatewayInfoResponse.Attributes")
	proto.RegisterType((*GatewayInfoResponse_AntennaLocation)(nil), "ttn.lorawan.v3.GatewayInfoResponse.AntennaLocation")
	proto.RegisterType((*GatewayInfoResponse_OAuth2Token)(nil), "ttn.lorawan.v3.GatewayInfoResponse.OAuth2Token")
	proto.RegisterType((*GatewayInfoResponse_Router)(nil), "ttn.lorawan.v3.GatewayInfoResponse.Router")
	proto.RegisterType((*PullFrequencyPlanConfigRequest)(nil), "ttn.lorawan.v3.PullFrequencyPlanConfigRequest")
}

func init() {
	proto.RegisterFile("lorawan-stack/api/gateway_configuration.proto", fileDescriptor_8b59222464c10014)
}

var fileDescriptor_8b59222464c10014 = []byte{
	// 1721 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xdd, 0x72, 0x1b, 0xb7,
	0x15, 0x1e, 0x8a, 0x12, 0x45, 0x9e, 0x15, 0x25, 0x19, 0x4e, 0x53, 0x86, 0x49, 0x53, 0x99, 0x4e,
	0x5b, 0x25, 0x53, 0x91, 0xb1, 0x94, 0x8b, 0x76, 0xea, 0x1b, 0x2a, 0xaa, 0x6c, 0xcd, 0xd0, 0x36,
	0x67, 0x25, 0xb5, 0x9d, 0x5e, 0x74, 0x07, 0xdc, 0x05, 0x29, 0x8c, 0x96, 0xc0, 0x1a, 0xc0, 0x8a,
	0x94, 0xaf, 0xfb, 0x3a, 0x9d, 0x69, 0xfb, 0x0a, 0x7d, 0x84, 0x5e, 0x75, 0xa6, 0x2f, 0xd0, 0x17,
	0xe8, 0x75, 0x06, 0xc0, 0x59, 0xfe, 0x49, 0x91, 0xed, 0x3b, 0xe2, 0xc3, 0x77, 0x7e, 0x70, 0x70,
	0x7e, 0xb0, 0x84, 0x83, 0x54, 0x2a, 0x3a, 0xa1, 0xe2, 0x40, 0x1b, 0x1a, 0x5f, 0x77, 0x68, 0xc6,
	0x3b, 0x23, 0x6a, 0xd8, 0x84, 0xde, 0x46, 0xb1, 0x14, 0x43, 0x3e, 0xca, 0x15, 0x35, 0x5c, 0x8a,
	0x76, 0xa6, 0xa4, 0x91, 0x64, 0xdb, 0x18, 0xd1, 0x46, 0x91, 0xf6, 0xcd, 0x51, 0xb3, 0x3b, 0xe2,
	0xe6, 0x2a, 0x1f, 0xb4, 0x63, 0x39, 0xee, 0x30, 0x71, 0x23, 0x6f, 0x33, 0x25, 0xa7, 0xb7, 0x1d,
	0x47, 0x8e, 0x0f, 0x46, 0x4c, 0x1c, 0xdc, 0xd0, 0x94, 0x27, 0xd4, 0xb0, 0xce, 0x9d, 0x1f, 0x5e,
	0x65, 0xf3, 0xe9, 0x5d, 0x0f, 0x78, 0xc2, 0x84, 0xe1, 0x43, 0xce, 0x94, 0xf6, 0xa4, 0xd6, 0x10,
	0x76, 0x7b, 0xc7, 0x17, 0xdf, 0x5f, 0x51, 0x21, 0x58, 0xfa, 0xbd, 0x73, 0x8c, 0x7c, 0x01, 0xb5,
	0xa1, 0x62, 0x6f, 0x73, 0x26, 0xe2, 0xdb, 0x46, 0x69, 0xaf, 0xb4, 0xbf, 0x1e, 0xce, 0x01, 0xf2,
	0x1d, 0x7c, 0xaa, 0x63, 0x2a, 0x22, 0xc3, 0xc7, 0x2c, 0x1a, 0xf3, 0x58, 0x49, 0xcd, 0x62, 0x29,
	0x12, 0xdd, 0x58, 0xdb, 0x2b, 0xed, 0xd7, 0xc3, 0x4f, 0xec, 0xee, 0x05, 0x1f, 0xb3, 0x57, 0x0b,
	0x7b, 0xad, 0xbf, 0x97, 0xa0, 0x66, 0x0d, 0x79, 0x0b, 0x9f, 0x42, 0x85, 0x09, 0x3a, 0x48, 0x99,
	0x53, 0x5f, 0x0d, 0x71, 0x45, 0x7e, 0x0e, 0x81, 0xd2, 0x9a, 0x47, 0x86, 0xaa, 0x11, 0x33, 0x4e,
	0xe1, 0x5a, 0x08, 0x16, 0xba, 0x70, 0x08, 0x39, 0x83, 0x9d, 0xd8, 0xfb, 0x8a, 0x51, 0xd4, 0x8d,
	0xf2, 0x5e, 0x79, 0x3f, 0x38, 0xdc, 0x6b, 0x2f, 0x07, 0xb0, 0xbd, 0x7a, 0xaa, 0x70, 0x3b, 0x5e,
	0x5c, 0xea, 0x99, 0x2d, 0x39, 0x1c, 0x6a, 0x66, 0x1a, 0xeb, 0x73, 0x5b, 0x6f, 0x1c, 0xd2, 0xfa,
	0x7f, 0x09, 0xaa, 0xe1, 0xe9, 0x7b, 0x3c, 0x26, 0xb0, 0x6e, 0x6e, 0x33, 0xe6, 0x5c, 0xad, 0x85,
	0xee, 0xf7, 0x72, 0xfc, 0xca, 0xab, 0xf1, 0x7b, 0x9f, 0x5d, 0xf2, 0x39, 0xd4, 0xcc, 0x34, 0x42,
	0x6b, 0x1b, 0xce, 0x5a, 0xd5, 0x4c, 0x7f, 0xef, 0xed, 0x7d, 0x09, 0x81, 0x99, 0x46, 0x56, 0x5b,
	0x34, 0xe6, 0xa2, 0x51, 0xf1, 0xda, 0xcd, 0xf4, 0x54, 0xb1, 0xb7, 0xaf, 0xb8, 0x58, 0xda, 0xa7,
	0xd3, 0xc6, 0xe6, 0xd2, 0x3e, 0x9d, 0x92, 0x16, 0xd4, 0xcd, 0x34, 0x12, 0xd2, 0xc4, 0x57, 0x8e,
	0xd5, 0xa8, 0x3a, 0x46, 0x60, 0xa6, 0xaf, 0x2d, 0x66, 0x69, 0xad, 0x7f, 0x96, 0xa0, 0x7a, 0xf6,
	0xbe, 0x83, 0x7f, 0x02, 0x1b, 0x8a, 0x26, 0x5c, 0xe2, 0xad, 0xfb, 0x05, 0xf9, 0x0c, 0xaa, 0x7c,
	0x18, 0xdd, 0xd0, 0x34, 0x67, 0xee, 0xe4, 0x1b, 0xe1, 0x26, 0x1f, 0xfe, 0xc1, 0x2e, 0x6d, 0x54,
	0x06, 0x54, 0x24, 0x13, 0x9e, 0x98, 0x2b, 0x77, 0xea, 0x7a, 0x38, 0x07, 0xc8, 0x53, 0xa8, 0xeb,
	0x4c, 0x31, 0x9a, 0x44, 0x43, 0x1a, 0x1b, 0xa9, 0xdc, 0xc1, 0xeb, 0xe1, 0x96, 0x07, 0x4f, 0x1d,
	0x46, 0x9a, 0x50, 0x4d, 0xa8, 0xa1, 0x8a, 0x1a, 0xe6, 0x4e, 0x5e, 0x0f, 0x67, 0xeb, 0xd6, 0x04,
	0x82, 0x8b, 0x69, 0xef, 0xb2, 0xc8, 0xb0, 0x9f, 0xc2, 0x66, 0x46, 0xa3, 0x11, 0xe5, 0xc2, 0xf9,
	0xbd, 0x11, 0x56, 0x32, 0xfa, 0x82, 0x72, 0x61, 0x3d, 0x1c, 0xf3, 0xa9, 0xdf, 0x59, 0xf3, 0x1e,
	0x8e, 0xf9, 0xb4, 0xd8, 0x52, 0xc3, 0x28, 0x93, 0x13, 0xa6, 0x0a, 0xe7, 0xd5, 0xb0, 0x6f, 0x97,
	0x76, 0x2b, 0xe1, 0x23, 0x2f, 0xb5, 0xee, 0xb7, 0x12, 0x3e, 0xb2, 0x52, 0xad, 0xff, 0x95, 0x61,
	0xeb, 0xfc, 0x4f, 0xcf, 0x8e, 0xbe, 0x7d, 0x86, 0xa6, 0x7f, 0x01, 0xdb, 0x98, 0x87, 0x51, 0x96,
	0x0f, 0x52, 0x1e, 0x63, 0xe4, 0xea, 0x88, 0xf6, 0x1d, 0x48, 0x9e, 0xc0, 0x56, 0x9c, 0xca, 0xf8,
	0x3a, 0xd2, 0x32, 0x57, 0x31, 0xc3, 0x38, 0x06, 0x0e, 0x3b, 0x77, 0x90, 0xa5, 0x50, 0x61, 0x98,
	0x10, 0x78, 0x92, 0xb2, 0xcb, 0x95, 0x00, 0x31, 0xe7, 0xf3, 0x6f, 0x00, 0xd2, 0x81, 0xc1, 0x62,
	0x70, 0xae, 0x05, 0x87, 0x9f, 0xdd, 0x57, 0x0b, 0xbe, 0x08, 0x6a, 0xe9, 0xc0, 0xa0, 0x9b, 0xdf,
	0x42, 0xc5, 0xdd, 0x99, 0x6e, 0x6c, 0xb8, 0x0a, 0x6a, 0xac, 0x4a, 0x15, 0xb9, 0x1f, 0x22, 0x8f,
	0x7c, 0x07, 0x55, 0xac, 0x21, 0xdd, 0xa8, 0xdc, 0x2f, 0x53, 0xa4, 0x4d, 0x38, 0x63, 0x92, 0x1e,
	0xfc, 0xc4, 0x12, 0x22, 0x6d, 0xa8, 0x48, 0xa8, 0x4a, 0x22, 0xdc, 0x71, 0xb9, 0xf9, 0x90, 0x8a,
	0xc7, 0x16, 0x3c, 0x47, 0x29, 0xac, 0x65, 0xf2, 0x5b, 0x08, 0x86, 0xfa, 0x7a, 0xa6, 0xa3, 0xfa,
	0x1e, 0x1d, 0x30, 0xd4, 0xd7, 0x85, 0x68, 0x17, 0xb6, 0xcd, 0x34, 0x4a, 0x73, 0x33, 0x6b, 0x1d,
	0x35, 0x77, 0x88, 0xcf, 0x57, 0xa5, 0x17, 0xf2, 0x28, 0xdc, 0x32, 0xd3, 0x5e, 0x8e, 0x21, 0xd3,
	0xad, 0xff, 0x96, 0x61, 0xf7, 0x9c, 0x8d, 0x0d, 0x8b, 0xaf, 0x2e, 0x4f, 0xfa, 0x18, 0xc8, 0x2e,
	0xd4, 0xf5, 0xd4, 0xde, 0x7f, 0x71, 0x0b, 0x25, 0xe7, 0xd4, 0x17, 0xab, 0x6a, 0x17, 0x93, 0x24,
	0xdc, 0xf2, 0x22, 0xa8, 0xe2, 0x12, 0xb6, 0x97, 0x87, 0x83, 0xcb, 0x86, 0xe0, 0xb0, 0x7d, 0x47,
	0xc7, 0x8a, 0xf1, 0xf6, 0x0b, 0x2f, 0x86, 0x5a, 0xeb, 0xa3, 0xc5, 0x65, 0xf3, 0x6f, 0x6b, 0x50,
	0x5f, 0x22, 0x90, 0x2e, 0x40, 0x61, 0x88, 0x27, 0xe8, 0x68, 0x6b, 0xd5, 0x08, 0x8a, 0x9c, 0xcd,
	0x87, 0x45, 0x58, 0x1b, 0x15, 0x98, 0x4d, 0x6f, 0xcd, 0xd4, 0x0d, 0x53, 0x11, 0x4d, 0x12, 0xc5,
	0xb4, 0xc6, 0xde, 0x57, 0xf7, 0x68, 0xd7, 0x83, 0xe4, 0xab, 0x19, 0x2d, 0x93, 0xca, 0x44, 0x79,
	0xe6, 0xb2, 0xd7, 0x56, 0xb4, 0x43, 0xfb, 0x52, 0x99, 0xcb, 0x8c, 0xec, 0xc3, 0xee, 0x22, 0x2b,
	0x91, 0x13, 0x81, 0xbd, 0x61, 0x7b, 0xce, 0x3b, 0x91, 0x13, 0x41, 0x1a, 0xb0, 0xe9, 0x3b, 0x4f,
	0x82, 0x3d, 0xb1, 0x58, 0x92, 0x97, 0xb0, 0xe9, 0xb9, 0x45, 0x56, 0x7e, 0x6c, 0xd4, 0x0a, 0xf1,
	0xd6, 0xbf, 0x2a, 0x10, 0xf4, 0xa4, 0xa2, 0x09, 0x46, 0x2b, 0xbc, 0xff, 0x66, 0x0f, 0xee, 0xd4,
	0xd7, 0x5c, 0xc6, 0xff, 0x7e, 0xe0, 0xaa, 0xfb, 0x3f, 0x72, 0xd5, 0x5f, 0x3f, 0xa4, 0xf4, 0xc1,
	0x5b, 0xfe, 0x4f, 0x09, 0x1e, 0xdd, 0xb1, 0x6a, 0xb3, 0x72, 0x94, 0xca, 0x01, 0x4d, 0x3f, 0x2a,
	0x2b, 0xbd, 0xc8, 0xbc, 0x91, 0x71, 0xa1, 0x99, 0xb2, 0xcf, 0x94, 0x28, 0x95, 0x78, 0xd3, 0x6b,
	0x61, 0x7d, 0x86, 0xf6, 0xa4, 0xd6, 0xa4, 0x0d, 0x8f, 0x97, 0x69, 0x51, 0xc2, 0x74, 0xec, 0xae,
	0xbb, 0x16, 0x3e, 0x5a, 0xe2, 0x9e, 0x30, 0x1d, 0x93, 0x6f, 0xe0, 0xd1, 0x62, 0x57, 0xf3, 0xec,
	0x75, 0xc7, 0xde, 0x59, 0x68, 0x6d, 0x96, 0xdb, 0xfc, 0x47, 0x79, 0x35, 0x83, 0x9f, 0x42, 0x7d,
	0xc0, 0x68, 0x2c, 0x45, 0xb4, 0x34, 0x96, 0xb6, 0x3c, 0x88, 0x53, 0x72, 0x4e, 0xca, 0x98, 0xe2,
	0x32, 0xc1, 0xe6, 0x8a, 0xa4, 0xbe, 0xc3, 0x6c, 0x86, 0x22, 0xc9, 0x8d, 0xcb, 0xab, 0x77, 0x45,
	0x86, 0x7a, 0xd4, 0x8e, 0xc2, 0x97, 0xef, 0x56, 0x59, 0x62, 0x80, 0xf9, 0xb9, 0xc0, 0x7a, 0x3d,
	0xb0, 0x43, 0x1d, 0x59, 0xda, 0xb0, 0x0c, 0x87, 0x17, 0x78, 0xe8, 0xdc, 0xb0, 0x8c, 0xfc, 0x0a,
	0x76, 0x90, 0xb0, 0x32, 0xc1, 0x50, 0xfb, 0x09, 0xa2, 0x64, 0x0f, 0x50, 0x73, 0x34, 0x98, 0x58,
	0x9f, 0x36, 0x17, 0x55, 0x1d, 0x4f, 0x5e, 0xbe, 0xb3, 0x53, 0xa1, 0x38, 0x9c, 0x1b, 0x55, 0x55,
	0x3f, 0x38, 0xf0, 0x6c, 0x6e, 0x5c, 0xcd, 0xad, 0x71, 0x31, 0x94, 0x2e, 0xc0, 0xb5, 0xbd, 0xd2,
	0xfe, 0x56, 0x61, 0xed, 0x0c, 0xd1, 0x05, 0x62, 0x4a, 0x0d, 0x37, 0x79, 0xc2, 0x1a, 0xb0, 0x57,
	0xda, 0x2f, 0x15, 0xc4, 0x1e, 0xa2, 0xe4, 0x6b, 0xd8, 0x2d, 0x88, 0x52, 0x8c, 0x3c, 0x33, 0x70,
	0x4c, 0x54, 0xd0, 0x2b, 0xe0, 0xd6, 0xbf, 0xcb, 0x50, 0xb7, 0xf9, 0x78, 0x3a, 0x29, 0xea, 0xe8,
	0x39, 0x6c, 0x62, 0xca, 0x7e, 0x44, 0xcb, 0x29, 0x44, 0xc8, 0x73, 0xa8, 0x0c, 0x79, 0x6a, 0x98,
	0xc2, 0x4a, 0xf9, 0xea, 0xbe, 0x4a, 0x99, 0x19, 0x6b, 0x9f, 0x3a, 0x6e, 0x88, 0x32, 0xe4, 0xd8,
	0xbf, 0x19, 0x06, 0x54, 0xfb, 0x17, 0x49, 0x70, 0xf8, 0xcb, 0x87, 0xe5, 0x4f, 0x90, 0x1d, 0xce,
	0xe4, 0xc8, 0x73, 0x58, 0x1f, 0x4d, 0xc6, 0x19, 0x8e, 0xd7, 0xfd, 0x87, 0xe5, 0x5f, 0xfc, 0xf1,
	0x15, 0xb6, 0x99, 0xd0, 0x49, 0x91, 0x23, 0x28, 0xd3, 0x8c, 0xbb, 0x9c, 0x08, 0x0e, 0x9f, 0x3c,
	0x2c, 0xdc, 0xed, 0x9f, 0x85, 0x96, 0xdd, 0xac, 0x42, 0xc5, 0x1f, 0xa4, 0x09, 0x50, 0x2d, 0x5c,
	0x6a, 0x2a, 0x80, 0xb9, 0x7a, 0xfb, 0xf6, 0x14, 0x32, 0xf1, 0x15, 0x50, 0x0b, 0xdd, 0xef, 0xa2,
	0x3b, 0xf3, 0x98, 0x45, 0x79, 0x96, 0x72, 0x71, 0x8d, 0xa9, 0x5f, 0x47, 0xf4, 0xd2, 0x81, 0xf6,
	0x3a, 0x0b, 0x9a, 0xed, 0xb9, 0x8e, 0xe8, 0xb3, 0x7f, 0x07, 0xf1, 0x13, 0x84, 0x9b, 0x1b, 0x50,
	0xee, 0xf6, 0xcf, 0x5a, 0x7f, 0xdd, 0x84, 0xc7, 0xc5, 0x2d, 0x89, 0xa1, 0x0c, 0x99, 0xce, 0xa4,
	0xd0, 0x8c, 0x6c, 0xc3, 0x1a, 0x4e, 0x92, 0x5a, 0xb8, 0xc6, 0x13, 0xf2, 0x1a, 0x80, 0x1a, 0xa3,
	0xf8, 0x20, 0x37, 0x4c, 0xff, 0xd8, 0x18, 0xbb, 0x47, 0x51, 0xbb, 0x3b, 0x93, 0x0a, 0x17, 0x34,
	0xd8, 0x03, 0xcd, 0xde, 0xce, 0x51, 0x96, 0x52, 0x81, 0x8d, 0xa5, 0x3e, 0x43, 0xfb, 0x29, 0x15,
	0xe4, 0xd7, 0x40, 0x96, 0x69, 0x51, 0xae, 0x52, 0xec, 0x2a, 0xbb, 0x4b, 0xd4, 0x4b, 0x95, 0xda,
	0x72, 0xa5, 0xb9, 0x91, 0x51, 0x9e, 0xd9, 0xef, 0x25, 0x1c, 0x28, 0x60, 0xa1, 0x4b, 0x87, 0xd8,
	0x1a, 0x1b, 0x72, 0x35, 0x9e, 0x50, 0xc5, 0x9c, 0xa2, 0x8a, 0x53, 0x14, 0x14, 0x98, 0xd5, 0xf1,
	0x17, 0xd8, 0x2d, 0xda, 0x58, 0x2a, 0x63, 0xf7, 0x2d, 0x87, 0x4f, 0x9a, 0xa3, 0x0f, 0x3a, 0xae,
	0x97, 0xed, 0xa1, 0xe8, 0xac, 0xf5, 0x15, 0x00, 0x09, 0x61, 0x4b, 0xd2, 0xdc, 0x5c, 0x1d, 0x46,
	0x46, 0x5e, 0x33, 0x81, 0x4f, 0x9d, 0xce, 0x87, 0xe8, 0x7e, 0xd3, 0xb5, 0x72, 0x17, 0x56, 0x2c,
	0x0c, 0xbc, 0x12, 0xb7, 0x20, 0xc7, 0x50, 0x51, 0x32, 0xb7, 0xa5, 0x54, 0x73, 0xda, 0xbe, 0xf9,
	0x10, 0x6d, 0xa1, 0x93, 0x08, 0x51, 0x92, 0x5c, 0xc2, 0xee, 0x90, 0xa6, 0xe9, 0x80, 0xc6, 0xd7,
	0x91, 0x87, 0x74, 0x03, 0xdc, 0xdc, 0xfd, 0x18, 0x6d, 0x3b, 0x85, 0x0e, 0xbf, 0xd6, 0xcd, 0x36,
	0xc0, 0x3c, 0x03, 0xc8, 0x1e, 0x04, 0xb6, 0x3f, 0x29, 0x9e, 0xb9, 0xb8, 0xfa, 0xf4, 0x5a, 0x84,
	0x9a, 0x23, 0xd8, 0x59, 0x09, 0xa1, 0xfd, 0x3c, 0x98, 0x75, 0xb1, 0x92, 0xeb, 0x4d, 0xb3, 0xb5,
	0xfd, 0xfa, 0x98, 0x37, 0xae, 0x35, 0xb7, 0x39, 0x07, 0xac, 0x64, 0x37, 0x45, 0x49, 0xff, 0xf2,
	0x9f, 0xad, 0x9b, 0x6f, 0x20, 0x58, 0x88, 0xa7, 0x7b, 0x93, 0xc7, 0x31, 0xd3, 0x1a, 0xaf, 0x05,
	0x5d, 0xf3, 0x98, 0xa7, 0xfc, 0x0c, 0x80, 0x4d, 0x33, 0xae, 0x98, 0x8e, 0xf0, 0x23, 0xa3, 0x1e,
	0xd6, 0x10, 0x39, 0x13, 0xcd, 0xdf, 0x41, 0xc5, 0x1f, 0xfa, 0x4e, 0xed, 0x3c, 0x81, 0xad, 0xf1,
	0x5b, 0x63, 0x56, 0x1e, 0x56, 0x81, 0xc5, 0xf0, 0x59, 0xd5, 0xea, 0xc1, 0x97, 0xfd, 0x3c, 0x4d,
	0x4f, 0x17, 0x33, 0x1a, 0xbb, 0x8d, 0x45, 0xb4, 0xb1, 0xe3, 0x75, 0xa5, 0x12, 0x66, 0x36, 0x76,
	0x96, 0x0a, 0xe1, 0x2c, 0x39, 0x7e, 0xf6, 0xe7, 0xce, 0x48, 0xb6, 0xcd, 0x15, 0x33, 0x57, 0x5c,
	0x8c, 0x74, 0x5b, 0x30, 0x33, 0x91, 0xea, 0xba, 0xb3, 0xfc, 0xcf, 0xc1, 0xcd, 0x51, 0x27, 0xbb,
	0x1e, 0x75, 0x8c, 0x11, 0xd9, 0x60, 0x50, 0x71, 0xff, 0x1b, 0x1c, 0xfd, 0x10, 0x00, 0x00, 0xff,
	0xff, 0xba, 0x42, 0x52, 0xae, 0xe0, 0x10, 0x00, 0x00,
}
