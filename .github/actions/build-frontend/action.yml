name: Build Frontend
description: Build Frontend
inputs:
  production-sourcemaps:
    description: Generate production sourcemaps
    required: true
    default: 'false'
runs:
  using: composite
  steps:
    - name: Initialize public folder cache
      id: public-cache
      uses: actions/cache@v3
      with:
        path: public
        key: ${{ runner.os }}-public-${{ hashFiles('pkg/webui/**', 'sdk/js/**/*.js', 'sdk/js/generated/*.json', 'config/babel.config.json', 'config/webpack.config.babel.js', 'package.json', 'yarn.lock', 'sdk/js/yarn.lock')}}
    - name: Initialize Babel cache
      if: steps.public-cache.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      with:
        path: .cache/babel
        key: ${{ runner.os }}-babel-cache-${{ hashFiles('pkg/webui/**', 'sdk/js/**/*.js', 'sdk/js/generated/*.json', 'config/babel.config.json', 'config/webpack.config.babel.js', 'package.json', 'yarn.lock', 'sdk/js/yarn.lock')}}
        restore-keys: |
          ${{ runner.os }}-babel-cache-
    - name: Build DLLs
      if: steps.public-cache.outputs.cache-hit != 'true'
      shell: bash
      run: tools/bin/mage -v js:buildDll
      env:
        WEBPACK_GENERATE_PRODUCTION_SOURCEMAPS: ${{ inputs.production-sourcemaps }}
    - name: Build Frontend
      if: steps.public-cache.outputs.cache-hit != 'true'
      shell: bash
      run: tools/bin/mage -v js:build
      env:
        WEBPACK_GENERATE_PRODUCTION_SOURCEMAPS: ${{ inputs.production-sourcemaps }}
