name: Snapshot release

on:
  push:
    branches:
      - "v3.*"

env:
  NODE_ENV: production

jobs:
  release:
    name: Snapshot release
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_PASSWORD }}"
      - name: Install Go and Dependencies
        uses: ./.github/actions/install-go-and-deps
      - name: Build Mage
        uses: ./.github/actions/build-mage
      - name: Install Node and Dependencies
        uses: ./.github/actions/install-node-and-deps
      - name: Initialize device repository index cache
        id: dr-index-cache
        uses: actions/cache@v2
        with:
          path: data/lorawan-devices-index
          key: dr-index-cache-${{ hashFiles('data/lorawan-devices') }}
      - name: Create device repository index
        run: tools/bin/mage dev:initDeviceRepo
        if: steps.dr-index-cache.outputs.cache-hit != 'true'
      - name: Initialize public folder cache
        id: public-cache
        uses: actions/cache@v2
        with:
          path: public
          key: public-cache-${{ hashFiles('pkg/webui/**', 'sdk/js/**/*.js', 'sdk/js/generated/*.json', 'config/webpack.config.babel.js', 'package.json', 'yarn.lock', 'sdk/js/yarn.lock')}}
      - name: Initialize dll cache
        if: steps.public-cache.outputs.cache-hit != 'true'
        id: dll-cache
        uses: actions/cache@v2
        with:
          path: |
            public/libs.*.bundle.js
            .cache/dll.json
          key: dll-cache-${{ hashFiles('yarn.lock') }}
      - name: Initialize babel cache
        id: babel-cache
        uses: actions/cache@v2
        if: steps.public-cache.outputs.cache-hit != 'true'
        with:
          path: .cache/babel
          key: ${{ runner.os }}-babel-cache-${{ hashFiles('config/babel.config.json', 'config/webpack.config.babel.js') }}
          restore-keys: |
            ${{ runner.os }}-babel-cache-
      - name: Build DLLs
        if: steps.dll-cache.outputs.cache-hit != 'true'
        run: tools/bin/mage js:buildDll
        env:
          WEBPACK_GENERATE_PRODUCTION_SOURCEMAPS: "true"
      - name: Build frontend
        run: tools/bin/mage js:build
        if: steps.public-cache.outputs.cache-hit != 'true'
        env:
          WEBPACK_GENERATE_PRODUCTION_SOURCEMAPS: "true"
      - name: Check for diff
        run: tools/bin/mage git:diff
      - name: Import the signing key
        run: |
          printf '%s' '${{ secrets.SIGNATURE_PASSPHRASE }}' >/tmp/gpg_passphrase
          cat /tmp/gpg_passphrase | gpg --passphrase-fd 0 --no-tty --batch --import gpg_signing_key
      - name: Run Goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: "v1.2.5"
          args: release --config .goreleaser.snapshot.yml --snapshot --timeout 60m
        env:
          SIGN_KEY_NAME: ${{ secrets.SIGN_KEY_NAME }}
      - name: Tag and Push Docker images
        run: |
          docker tag lorawan-stack-dev:${{ github.sha }}-amd64 ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}-amd64
          docker tag lorawan-stack-dev:${{ github.sha }}-arm64 ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}-arm64
          docker push ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}-amd64
          docker push ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}-arm64
          docker manifest create ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }} ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}-amd64 ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}-arm64
          docker manifest push ${DOCKER_PREFIX}/lorawan-stack-dev:${{ github.sha }}
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_PREFIX: thethingsnetwork
